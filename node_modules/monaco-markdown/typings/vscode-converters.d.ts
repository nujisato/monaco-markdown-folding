import { editor, Range as _Range, IRange, Selection as _Selection, IPosition } from "monaco-editor";
import * as vscode from "./extHostTypes";
export interface PositionLike {
    line: number;
    character: number;
}
export interface RangeLike {
    start: PositionLike;
    end: PositionLike;
}
export interface SelectionLike extends RangeLike {
    anchor: PositionLike;
    active: PositionLike;
}
export declare namespace Selection {
    function to(selection: _Selection): vscode.Selection;
    function from(selection: SelectionLike): _Selection;
}
export declare namespace Range {
    function from(range: undefined): undefined;
    function from(range: RangeLike): _Range;
    function from(range: RangeLike | undefined): _Range | undefined;
    function to(range: undefined): vscode.Range;
    function to(range: IRange): vscode.Range;
    function to(range: IRange | undefined): vscode.Range | undefined;
}
export declare namespace Position {
    function to(position: IPosition): vscode.Position;
    function from(position: vscode.Position): IPosition;
}
export declare namespace EndOfLine {
    function from(eol: vscode.EndOfLine): editor.EndOfLineSequence | undefined;
    function to(eol: editor.EndOfLineSequence): vscode.EndOfLine | undefined;
}
export declare namespace WorkspaceEdit {
    function from(value: vscode.WorkspaceEdit): editor.IIdentifiedSingleEditOperation[];
}
